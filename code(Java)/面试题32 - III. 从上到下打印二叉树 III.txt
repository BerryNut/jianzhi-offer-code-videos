面试题32 - III. 从上到下打印二叉树 III
难度中等16
请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。
?
例如:
给定二叉树:?[3,9,20,null,null,15,7],
    3   / \  9  20    /  \   15   7
返回其层次遍历结果：
[  [3],  [20,9],  [15,7]]
?
提示：
	1. 节点总数 <= 1000
通过次数11,771
提交次数19,813
在真实的面试中遇到过这道题？
是
否

来自 <https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/> 
/**
?*?Definition?for?a?binary?tree?node.
?*?public?class?TreeNode?{
?*?????int?val;
?*?????TreeNode?left;
?*?????TreeNode?right;
?*?????TreeNode(int?x)?{?val?=?x;?}
?*?}
?*/
class?Solution?{
????public?List<List<Integer>>?levelOrder(TreeNode?root)?{
????????List<List<Integer>>?res?=?new?ArrayList<>();
????????Queue<TreeNode>?q?=?new?LinkedList<>();
????????if(root?!=?null)?q.add(root);
????????while(!q.isEmpty())
????????{
????????????//zigzag
????????????LinkedList<Integer>?temp?=?new?LinkedList<>();
????????????int?s?=?q.size();
????????????for(int?i?=?0;?i?<?s;?i?++)
????????????{
????????????????TreeNode?node?=?q.poll();
????????????????if(res.size()?%?2?==?0)
????????????????????temp.addLast(node.val);
????????????????else
????????????????????temp.addFirst(node.val);
????????????????if(node.left?!=?null)?q.add(node.left);
????????????????if(node.right?!=?null)?q.add(node.right);
????????????}
????????????res.add(temp);
????????}
????????return?res;
????}
}
