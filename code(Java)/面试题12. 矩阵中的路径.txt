面试题12. 矩阵中的路径
难度中等60
请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。
[["a","b","c","e"],
["s","f","c","s"],
["a","d","e","e"]]
但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。
?
示例 1：
输入：board = [["A","B","C","E"],["S","F","C","S"],["A","D","E","E"]], word = "ABCCED"输出：true
示例 2：
输入：board = [["a","b"],["c","d"]], word = "abcd"输出：false

来自 <https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/> 
class?Solution?{
????//回溯法?dfs
????public?boolean?exist(char[][]?board,?String?word)?{
????????for(int?i?=?0;?i?<?board.length;?i?++)
????????????for(int?j?=?0;?j?<?board[0].length;?j?++)
????????????????if(dfs(board,?word,?0,?i,?j))
????????????????????return?true;
????????
????????return?false;
????}
????private?boolean?dfs(char[][]?board,?String?word,?int?u,?int?x,?int?y)
????{
????????//先判断边界?后比较相等
????????if(x?>=?board.length?||?x?<?0?||?y?>=?board[0].length?||?y?<?0?||?board[x][y]?!=?word.charAt(u))
????????????return?false;
????????if(u?==?word.length()?-?1)?return?true;
????????char?temp?=?board[x][y];
????????board[x][y]?=?'*';
????????//递归遍历
????????boolean?res?=?dfs(board,?word,?u?+?1,?x?-?1,?y)?||?dfs(board,?word,?u?+?1,?x?+?1,?y)?||?dfs(board,?word,?u?+?1,?x,?y?-?1)?||?dfs(board,?word,?u?+?1,?x,?y?+?1);
????????board[x][y]?=?temp;
????????return?res;
????}
}

