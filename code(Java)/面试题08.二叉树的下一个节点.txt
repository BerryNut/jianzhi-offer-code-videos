给定一棵二叉树的其中一个节点，请找出中序遍历序列的下一个节点。
注意：
? 如果给定的节点是中序遍历序列的最后一个，则返回空节点;
? 二叉树一定不为空，且给定的节点一定不是空节点；
样例
假定二叉树是：[2, 1, 3, null, null, null, null]， 给出的是值等于2的节点。
则应返回值等于3的节点。
解释：该二叉树的结构如下，2的后继节点是3。  2 / \1   3

来自 <https://www.acwing.com/problem/content/31/> 
/**
?*?Definition?for?a?binary?tree?node.
?*?public?class?TreeNode?{
?*?????int?val;
?*?????TreeNode?left;
?*?????TreeNode?right;
?*?????TreeNode?father;
?*?????TreeNode(int?x)?{?val?=?x;?}
?*?}
?*/
class?Solution?{
????public?TreeNode?inorderSuccessor(TreeNode?p)?{
????????//左根右
????????//中序遍历特点
????????//一个结点?有右子树??返回一定是?右子树?最左边的结点
????????if(p.right?!=?null)
????????{
????????????p?=?p.right;
????????????while(p.left?!=?null)?p?=?p.left;
????????????return?p;
????????}
????????//没有右子树?返回的是?父亲结点
????????while(p.father?!=?null)
????????{
????????????if(p?==?p.father.left)
????????????????return?p.father;
????????????p?=?p.father;
????????}
????????return?null;
????}
}

