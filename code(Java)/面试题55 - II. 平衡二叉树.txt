面试题55 - II. 平衡二叉树
难度简单30
输入一棵二叉树的根节点，判断该树是不是平衡二叉树。如果某二叉树中任意节点的左右子树的深度相差不超过1，那么它就是一棵平衡二叉树。
?
示例 1:
给定二叉树?[3,9,20,null,null,15,7]
    3   / \  9  20    /  \   15   7
返回?true?。

示例 2:
给定二叉树?[1,2,2,3,3,null,null,4,4]
       1      / \     2   2    / \   3   3  / \ 4   4
返回?false?。

来自 <https://leetcode-cn.com/problems/ping-heng-er-cha-shu-lcof/> 

/**
?*?Definition?for?a?binary?tree?node.
?*?public?class?TreeNode?{
?*?????int?val;
?*?????TreeNode?left;
?*?????TreeNode?right;
?*?????TreeNode(int?x)?{?val?=?x;?}
?*?}
?*/
class?Solution?{
????public?int?treeDepth(TreeNode?root)?{
????????if(root?==null)return?0;
????????int?a?=?treeDepth(root.left);
????????int?b?=?treeDepth(root.right);
????????return?a>b?a+1:b+1;
????}
????public?boolean?isBalanced(TreeNode?root)?{
?????????if?(root?==?null)?{
????????????return?true;
????????}
????????int?left?=?treeDepth(root.left);
????????int?right?=?treeDepth(root.right);
????????return?Math.abs(left?-?right)?>?1???false?:?true?&&?isBalanced(root.left)?&&?isBalanced(root.right);
????}
}


