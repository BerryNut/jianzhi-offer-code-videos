面试题35. 复杂链表的复制
难度中等38
请实现?copyRandomList?函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个?next?指针指向下一个节点，还有一个?random?指针指向链表中的任意节点或者?null。
?
示例 1：

输入：head = [[7,null],[13,0],[11,4],[10,2],[1,0]]输出：[[7,null],[13,0],[11,4],[10,2],[1,0]]
示例 2：

输入：head = [[1,1],[2,1]]输出：[[1,1],[2,1]]
示例 3：

输入：head = [[3,null],[3,0],[3,null]]输出：[[3,null],[3,0],[3,null]]
示例 4：
输入：head = []输出：[]解释：给定的链表为空（空指针），因此返回 null。
?
提示：
	? -10000 <= Node.val <= 10000
	? Node.random?为空（null）或指向链表中的节点。
	? 节点数目不超过 1000 。

来自 <https://leetcode-cn.com/problems/fu-za-lian-biao-de-fu-zhi-lcof/> 

/*
//?Definition?for?a?Node.
class?Node?{
????int?val;
????Node?next;
????Node?random;
????public?Node(int?val)?{
????????this.val?=?val;
????????this.next?=?null;
????????this.random?=?null;
????}
}
*/
/*
思路：
1.复制?结点?7??8?9?10
????????????7?7’?8?8‘?9?9‘?10?10’
2.复制?random指针
????????????7?random?9
????????????7‘?random?9?next?9’
3.分离出来
????????????7‘?8’?9‘?10’
*/
class?Solution?{
????public?Node?copyRandomList(Node?head)?{
????????if(head?==?null)
????????????return?null;
????????
????????copy(head);//复制结点
????????copyrandom(head);//复制random指针
????????return?divide(head);//分离出来
????}
????private?void?copy(Node?head){
????????while(head?!=?null)
????????{
????????????Node?clone?=?new?Node(head.val);
????????????Node?nextNode?=?head.next;
????????????head.next?=?clone;
????????????clone.next?=?nextNode;
????????????head?=?clone.next;
????????}
????}
????private?void?copyrandom(Node?head){
????????while(head?!=?null){
????????????Node?clone?=?head.next;
????????????if(head.random?!=?null)
????????????{
????????????????Node?randomnode?=?head.random;
????????????????clone.random?=?randomnode.next;
????????????}
????????????head?=?clone.next;
????????}
????}
//7??8?9?10
//7?7’?8?8‘?9?9‘?10?10’
????private?Node?divide(Node?head)
????{
????????Node?cloneNode?=?head.next;
????????Node?cloneHead?=?cloneNode;
????????head.next?=?cloneNode.next;
????????head?=?head.next;
????????while(head?!=?null)
????????{
????????????cloneNode.next?=?head.next;?//?8'
????????????head.next?=?head.next.next;//8?9
????????????head?=?head.next;
????????????cloneNode?=?cloneNode.next;
????????}
????????return?cloneHead;
????}


}

