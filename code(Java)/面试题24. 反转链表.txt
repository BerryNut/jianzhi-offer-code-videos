面试题24. 反转链表
难度简单35
定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。
?
示例:
输入: 1->2->3->4->5->NULL输出: 5->4->3->2->1->NULL
?
限制：
0 <= 节点个数 <= 5000

来自 <https://leetcode-cn.com/problems/fan-zhuan-lian-biao-lcof/> 
/**
?*?Definition?for?singly-linked?list.
?*?public?class?ListNode?{
?*?????int?val;
?*?????ListNode?next;
?*?????ListNode(int?x)?{?val?=?x;?}
?*?}
?*/
class?Solution?{
????public?ListNode?reverseList(ListNode?head)?{
????????ListNode?pre?=?null;
????????ListNode?cur?=?head;
????????while(cur?!=?null)
????????{
????????????//让cur指向?pre
????????????//然后?pre??cur?都往后走一个
????????????ListNode?temp?=?cur.next;
????????????cur.next?=?pre;
????????????pre?=?cur;
????????????cur?=?temp;
????????}
????????return?pre;
????}
}




/**
?*?Definition?for?singly-linked?list.
?*?public?class?ListNode?{
?*?????int?val;
?*?????ListNode?next;
?*?????ListNode(int?x)?{?val?=?x;?}
?*?}
?*/
class?Solution?{
????public?ListNode?reverseList(ListNode?head)?{
????????//递归终止条件是当前为空，或者下一个节点为空
????????if(head==null?||?head.next==null)?{
????????????return?head;
????????}
????????//这里的cur就是最后一个节点
????????ListNode?cur?=?reverseList(head.next);
????????//这里请配合动画演示理解
????????//如果链表是?1->2->3->4->5，那么此时的cur就是5
????????//而head是4，head的下一个是5，下下一个是空
????????//所以head.next.next?就是5->4
????????head.next.next?=?head;
????????//防止链表循环，需要将head.next设置为空
????????head.next?=?null;
????????//每层递归函数都返回cur，也就是最后一个节点
????????return?cur;
????}
}









