/*
struct RandomListNode {
    int label;
    struct RandomListNode *next, *random;
    RandomListNode(int x) :
            label(x), next(NULL), random(NULL) {
    }
};
*/
class Solution {
public:
    RandomListNode* Clone(RandomListNode* head)
    {
        
        //1. 复制每个结点 next
            //在两个结点之间新建一个结点  复制前驱
        for(auto p = head; p;)
        {
            auto newp = new RandomListNode(p -> label);
            //在p  和  p -> next之间插入newp
            auto temp = p -> next;
            p -> next = newp;
            newp -> next = temp;
            p = temp;
        }
        
        //random
        //a -> next -> ramdom = a -> random -> next;
        for(auto p = head; p; p = p -> next -> next)
        {
            if(p -> random)
                p -> next -> random = p -> random -> next;
        }
        
        auto dummy = new RandomListNode(-1);
        
        auto cur = dummy;
        for(auto p = head; p; p = p -> next)
        {
            cur -> next = p -> next;//A'
            cur = cur -> next;
            p -> next = p -> next -> next;
        }
        
        return dummy -> next;
    }
};