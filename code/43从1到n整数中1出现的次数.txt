class Solution {
public:
    //13  6
    //left i  right
    //i 1  left * 10^i + right + 1
    //i 0 left *10 ^ i + 10^i 
    int NumberOf1Between1AndN_Solution(int n)
    {
        if(!n) return 0;
        //n >= 1
        vector<int> num;
        while(n)
        {
            num.push_back(n % 10);
            n /= 10;
        }
        
        int res = 0;
        for(int i = num.size() - 1; i >= 0; i --)
        {
            int left = 0, right = 0, x = 1;
            //高位到低位 left
            for(int j = num.size() - 1; j > i; j --)
                left = left * 10 + num[j];
            //计算低位 right
            for(int k = i - 1; k >= 0; k --)
            {
                right = right * 10 + num[k];
                x *= 10;
            }
            
            //计算位数
            res = res + left * x;
            if(num[i] == 1) res += right + 1;
            else if(num[i] > 1) res += x;
            
        }
        return res;
    }
};